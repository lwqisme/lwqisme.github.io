<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cheong</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-30T08:17:43.266Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vscode远程debug mysql</title>
    <link href="http://example.com/2022/12/30/mysql-make-debug/"/>
    <id>http://example.com/2022/12/30/mysql-make-debug/</id>
    <published>2022-12-30T08:16:23.000Z</published>
    <updated>2022-12-30T08:17:43.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vscode远程debug-mysql"><a href="#vscode远程debug-mysql" class="headerlink" title="vscode远程debug mysql"></a>vscode远程debug mysql</h1><h2 id="先用自己下载的源代码编译并安装"><a href="#先用自己下载的源代码编译并安装" class="headerlink" title="先用自己下载的源代码编译并安装"></a>先用自己下载的源代码编译并安装</h2><h3 id="〇可以提前安装的依赖"><a href="#〇可以提前安装的依赖" class="headerlink" title="〇可以提前安装的依赖"></a>〇可以提前安装的依赖</h3><p>apt install libssl-dev</p><p>apt install pkg-config</p><h3 id="①安装依赖"><a href="#①安装依赖" class="headerlink" title="①安装依赖"></a>①安装依赖</h3><p>个人本地操作系统为Ubuntu18.04LTS，编译安装需要以下依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install build-essential cmake bison libncurses5-dev libssl-dev pkg-config</span><br></pre></td></tr></table></figure><p>详细依赖列表参考<a href="https://dev.mysql.com/doc/refman/8.0/en/source-installation.html%E3%80%82%E5%A6%82%E6%9E%9C%E6%9C%89%E5%85%B6%E4%BB%96%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%BE%9D%E8%B5%96%EF%BC%8Ccmake%E7%9A%84%E6%97%B6%E5%80%99%E4%BC%9A%E6%A3%80%E6%9F%A5%E5%87%BA%E6%9D%A5%EF%BC%8C%E7%94%9A%E8%87%B3%E4%BC%9A%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E5%85%B7%E4%BD%93%E7%9A%84apt">https://dev.mysql.com/doc/refman/8.0/en/source-installation.html。如果有其他缺失的依赖，cmake的时候会检查出来，甚至会打印输出具体的apt</a> &#x2F; yum命令，把命令拷下来执行一下再编译即可。</p><h3 id="②下载源码"><a href="#②下载源码" class="headerlink" title="②下载源码"></a>②下载源码</h3><p>源码包分为带boost版和不带boost版的，方便起见直接下载带boost的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget [https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.16.tar.gz](https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.16.tar.gz)</span><br><span class="line">tar xzv -f mysql-boost-8.0.16.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-8.0.16/ ; <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="③编译安装"><a href="#③编译安装" class="headerlink" title="③编译安装"></a>③编译安装</h3><p>cmake的完整选项列表参考<a href="https://dev.mysql.com/doc/refman/8.0/en/source-configuration-options.html%E3%80%82">https://dev.mysql.com/doc/refman/8.0/en/source-configuration-options.html。</a></p><p>cmake时按照提示添加 <code>-DFORCE_INSOURCE_BUILD=1</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/data -DWITH_BOOST=boost -DFORCE_INSOURCE_BUILD=ON -DFORCE_INSOURCE_BUILD=1</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="④初始配置"><a href="#④初始配置" class="headerlink" title="④初始配置"></a>④初始配置</h3><p>详细参考<a href="https://dev.mysql.com/doc/refman/8.0/en/installing-source-distribution.html%E3%80%82">https://dev.mysql.com/doc/refman/8.0/en/installing-source-distribution.html。</a></p><p>添加mysql用户组和配置文件权属。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql mysql</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/mysql/data</span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql /usr/local/mysql</span><br></pre></td></tr></table></figure><p><code>/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</code><br>这一步会打印输出随机生成的root账号初始密码，找个小本本记下来待会要用这个密码连接登录的。<code>[Server] A temporary password is generated for root@localhost: T9Er+PlKFu-6</code></p><p>生成ssl(可选)。</p><p><code>/usr/local/mysql/bin/mysql_ssl_rsa_setup --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</code><br>新建一个全局用的简单的配置文件。</p><p><code>vim /etc/my.cnf</code></p><p>然后写入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /usr/local/mysql/data</span><br></pre></td></tr></table></figure><h3 id="⑤开启服务"><a href="#⑤开启服务" class="headerlink" title="⑤开启服务"></a>⑤开启服务</h3><p>详细参考<a href="https://dev.mysql.com/doc/refman/8.0/en/postinstallation.html%E3%80%82">https://dev.mysql.com/doc/refman/8.0/en/postinstallation.html。</a></p><p>配置mysqld服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/mysqld</span><br><span class="line">update-rc.d mysqld defaults</span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><p>添加PATH。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;# MySQL PATH\nexport PATH=/usr/local/mysql/bin:$PATH\n&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>连接登录MySQL并修改root账户密码(需要使用第④步生成的密码)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p<span class="string">&#x27;!YAH0uS%AS&gt;q&#x27;</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;1024&#x27;</span>;</span><br></pre></td></tr></table></figure><p>因为本次安装只是个人使用(非生产环境)，所以可以额外的将账户密码信息写入配置文件，以后连接就不用再输入了(懒人专用)。然后进入MySQL修改开启root账户可远程连接。</p><h3 id="把这几行添加到client选项组下面"><a href="#把这几行添加到client选项组下面" class="headerlink" title="把这几行添加到client选项组下面"></a>把这几行添加到client选项组下面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">user = root</span><br><span class="line">password = 1024</span><br><span class="line">port = 3306</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@zoo:/home/zoo/mysql-8.0.16<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 11</span><br><span class="line">Server version: 8.0.16 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; UPDATE `mysql`.`user` SET `Host` = <span class="string">&#x27;%&#x27;</span> WHERE `User` = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h2 id="启动成功之后，按照以下方法进行配置："><a href="#启动成功之后，按照以下方法进行配置：" class="headerlink" title="启动成功之后，按照以下方法进行配置："></a>启动成功之后，按照以下方法进行配置：</h2><h3 id="一、插件与依赖安装"><a href="#一、插件与依赖安装" class="headerlink" title="一、插件与依赖安装"></a>一、插件与依赖安装</h3><p>在本地机器上:</p><ul><li>安装 目前最新版本支持 Remote - Development 插件</li><li>安装 VSCode 扩展 “Remote - Development”, 方法是左下角 <code>管理（⚙）</code> -&gt; <code>扩展</code>, 直接搜索商店</li><li>安装兼容 OpenSSH 的 SSH 客户端, 我安装的</li></ul><p>在远程机器上:</p><ul><li>编译安装mysql（注意编译时需开启 -DWITH_DEBUG&#x3D;1），并且启动mysql实例，这里我是在centos（CentOS Linux release 7.7.1908）上面编译安装的mysql8.0.18（为方便没有 mysql编译安装经验的读者回头另写一篇 mysql8.0.18编译安装）</li><li>安装 gdb, <code>yum install gdb</code></li><li>安装 gdbserver, <code>yum install gdb-gdbserver</code></li><li>启动 ssh 服务端, 通常默认已经启动</li></ul><h3 id="二、vscode-ssh打开对应的文件夹"><a href="#二、vscode-ssh打开对应的文件夹" class="headerlink" title="二、vscode ssh打开对应的文件夹"></a>二、vscode ssh打开对应的文件夹</h3><p><img src="/mysql-debug/1672387417253.png" alt="1672387417253"></p><h3 id="三、关闭正在运行的mysqld实例"><a href="#三、关闭正在运行的mysqld实例" class="headerlink" title="三、关闭正在运行的mysqld实例"></a>三、关闭正在运行的mysqld实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld stop</span><br></pre></td></tr></table></figure><h3 id="四、创建debug用的配置文件"><a href="#四、创建debug用的配置文件" class="headerlink" title="四、创建debug用的配置文件"></a>四、创建debug用的配置文件</h3><p><strong>client端配置：</strong></p><p>首先创建一个.vscode文件夹，然后 <code>chmod 777 -R .vscode</code>赋予权限</p><p>在.vscode下创建配置文件launch.json，配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb remote launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 前面如果按照这教程安装，program不需要修改，makeinstall的路径就是这个。</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/local/mysql/bin/mysqld&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtConnect&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerArgs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;linux&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;miDebuggerServerAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;机器的ip&#125;:2333&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;moduleLoad&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;engineLogging&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;trace&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="五、debug"><a href="#五、debug" class="headerlink" title="五、debug"></a>五、debug</h3><p><strong>server端：</strong></p><p>首先启动一个gdbserver：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gdbserver localhost:2333 /usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf --user=mysql</span><br><span class="line">或者</span><br><span class="line">gdbserver localhost:2333 /usr/local/mysql/bin/mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br><span class="line">随便挑一个吧，我也忘记了是哪个才能启动成功了。</span><br><span class="line">按理说两个是一样的，因为基本信息都在my.cnf配置好了。</span><br></pre></td></tr></table></figure><p>然后对应输出：</p><p><img src="/mysql-debug/1672387457515.png" alt="1672387457515"></p><p>此时就可以开始使用vscode进行debug了。</p><p><strong>client端：</strong></p><p><img src="/mysql-debug/1672387450640.png" alt="1672387450640"></p><p>output界面出现这个提示，先点继续，跳过：</p><p><img src="/mysql-debug/1672387521873.png" alt="1672387521873"></p><p>然后就运行到我自己打的断点处了！</p><p><img src="/mysql-debug/1672387529970.png" alt="1672387529970"></p><p>继续点击继续按钮</p><p>直至显示这样的输出以及表示正在运行：</p><p><img src="/mysql-debug/1672387653592.png" alt="1672387653592"></p><p>这时候回头看开启gdbserver的服务器，显示ready for connections，那就是成功了。</p><p><img src="/mysql-debug/1672387670235.png" alt="1672387670235"></p><p>这时候可以去连接3306端口登录服务器，也是成功的：</p><p><img src="/mysql-debug/1672387688684.png" alt="1672387688684"></p><p>大功告成！</p><h2 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h2><p>debug运行过程出现了这个问题：</p><p><img src="/mysql-debug/1672387701600.png" alt="1672387701600"></p><p>有可能是启动了多个mysql实例，然后使用的同一份配置导致冲突了。尝试将ibdata1文件删掉（这是错误的做法），后面只能重新安装。</p><p>另一个问题：</p><p>重新make install之后启动，出现了这个问题：</p><p><img src="/mysql-debug/1672387711554.png" alt="1672387711554"></p><p>这时候把my.cnf里的socket路径换掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">socket = /tmp/mysqly.socok</span><br><span class="line">user = root</span><br><span class="line">password = 1024</span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">socket = /tmp/mysqly.sock</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>还是没用，把登录语句换成这样，不走本机socket算了，然后就能登录进去了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h127.0.0.1 -P3306 -u root -p<span class="string">&#x27;w/hqkSt+d3zq&#x27;</span></span><br></pre></td></tr></table></figure><p>参考博客：</p><p><a href="https://blog.csdn.net/sweeper_freedoman/article/details/91345114">Ubuntu Linux系统MySQL8.0源码编译安装笔记_蛙鳜鸡鹳狸猿的博客-CSDN博客_ubuntu cannot find appropriate system libraries</a></p><p><a href="http://blog.itpub.net/11566490/viewspace-2670551/">windows系统vscode远程调试mysql_ITPUB博客</a></p>]]></content>
    
    
    <summary type="html">使用windows开发机器+ubuntu远程机器进行mysql的debug</summary>
    
    
    
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>psqlLab配置踩坑记录</title>
    <link href="http://example.com/2022/05/10/psqlLab-pitfall/"/>
    <id>http://example.com/2022/05/10/psqlLab-pitfall/</id>
    <published>2022-05-10T04:53:00.000Z</published>
    <updated>2022-05-10T04:53:22.546Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文的基础是 <a href="https://blog.miigon.net/posts/postgresql-source-compilation-guide/">数据库内核课程 PostgreSQL 12.5 源码安装避坑 guide</a>，miigon大佬的博客。我在此基础上加一些自己的问题归纳。</p></blockquote><h3 id="make-install时，如果失败可以尝试-make-NO-PGXS-1-install"><a href="#make-install时，如果失败可以尝试-make-NO-PGXS-1-install" class="headerlink" title="make install时，如果失败可以尝试 make NO_PGXS=1 install"></a><code>make install</code>时，如果失败可以尝试 <code>make NO_PGXS=1 install</code></h3><p>构建时出错的问题</p><h3 id="data文件夹需要修改拥有者和权限"><a href="#data文件夹需要修改拥有者和权限" class="headerlink" title="data文件夹需要修改拥有者和权限"></a>data文件夹需要修改拥有者和权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$PGDATA</span>&quot;</span></span><br><span class="line"><span class="built_in">chown</span> -R 用户名 <span class="string">&quot;<span class="variable">$PGDATA</span>&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> 700 <span class="string">&quot;<span class="variable">$PGDATA</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="自己写的sql需要进入psql中执行脚本才能生效"><a href="#自己写的sql需要进入psql中执行脚本才能生效" class="headerlink" title="自己写的sql需要进入psql中执行脚本才能生效"></a>自己写的sql需要进入psql中执行脚本才能生效</h3><p>比如说我在 <code>intset.source</code> 定义了新类型的结构，如果不生效，就进入到 <code>intset.source</code> 的文件夹去，psql，然后执行 <code>\i intset.source</code></p><h3 id="遇到修改不生效的问题"><a href="#遇到修改不生效的问题" class="headerlink" title="遇到修改不生效的问题"></a>遇到修改不生效的问题</h3><p>遇到修改不生效的问题，可以直接删data包，重新initdb</p><h3 id="gitignore请指定-否则会导致群体攻击"><a href="#gitignore请指定-否则会导致群体攻击" class="headerlink" title="gitignore请指定./ 否则会导致群体攻击"></a>gitignore请指定<code>./</code> 否则会导致群体攻击</h3><p>之前直接写了<code>/data</code>，把我所有的名字为data的文件夹都忽略了。。</p>]]></content>
    
    
    <summary type="html">秦健斌老师的postsql课配置踩坑（不包含代码细节）</summary>
    
    
    
    
    <category term="自学课程" scheme="http://example.com/tags/%E8%87%AA%E5%AD%A6%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="postgreSQL" scheme="http://example.com/tags/postgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>字节飞书后端实习（两面+hr）</title>
    <link href="http://example.com/2022/04/07/feishu-interview-20220318/"/>
    <id>http://example.com/2022/04/07/feishu-interview-20220318/</id>
    <published>2022-04-07T05:15:14.000Z</published>
    <updated>2022-12-30T07:56:28.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h2><p>2022.3.18</p><h4 id="1-问项目"><a href="#1-问项目" class="headerlink" title="1. 问项目"></a>1. 问项目</h4><ul><li>首先是问redis是怎么用的</li><li>mq的消费是怎么写的呢？</li><li>mq如何保证消息消费的可靠性</li><li>你在项目中用到了本地缓存，放在了业务代码内存中。那如果签到一半你的项目突然崩了，本地缓存都消失了，那不是会出问题啊？</li><li>用lua脚本实现令牌桶的具体是怎么实现的？</li><li>你的令牌桶判断了每次填满所需要的时间，那如果说你的桶只有100，然后有1000条消息并发，那不是会突然间处理100条，然后再拒绝掉其他的，待会又再突然间处理掉100个，那不是很周期？怎么处理</li><li>为什么用lua脚本？为什么不直接用java的调用？</li></ul><h4 id="2-问数据库（面试官说既然lua是原子性的，那不如说说数据库的原子性？）"><a href="#2-问数据库（面试官说既然lua是原子性的，那不如说说数据库的原子性？）" class="headerlink" title="2. 问数据库（面试官说既然lua是原子性的，那不如说说数据库的原子性？）"></a>2. 问数据库（面试官说既然lua是原子性的，那不如说说数据库的原子性？）</h4><ul><li>说说数据库事务的原则？ACID</li><li>展开说一下ACID每一个（我的一致性答得稀烂，口胡过去了，啊吧啊吧）</li><li>说一下事务的隔离级别有哪些，mysql用哪个，可重复读还有什么问题？</li><li>你刚刚说可重复读都那么完美了，为啥还需要串行化读呢？(口胡)</li></ul><h4 id="3-问计算机网络"><a href="#3-问计算机网络" class="headerlink" title="3. 问计算机网络"></a>3. 问计算机网络</h4><ul><li>讲一下HTTPS的通信流程<ul><li>这里我脑抽了直接从我到腾讯云申请证书开始讲…说到后面乱七八糟，面试官说你直接从客户端请求服务端开始讲就行了…</li></ul></li><li>ssl证书是如何保证通信的？如何保证不被篡改？</li><li>ssl证书由ca机构颁发嘛，怎么判断这个厂家可信？怎么确定厂家的信息没有被篡改？（不知道。。一下给我整蒙了，答不上来）</li><li>了解中间人攻击吗</li><li>那如果自定义证书呢？消息会不会被中间人攻击<br>回马枪又问了一句B+树和B树的区别？（口胡叭叭过去了，我猜B树数据是存在每一个节点里的，瞎吹发现好像蒙对了）</li></ul><h4 id="4-做题：做过，大概十分钟做出来了。"><a href="#4-做题：做过，大概十分钟做出来了。" class="headerlink" title="4. 做题：做过，大概十分钟做出来了。"></a>4. 做题：做过，大概十分钟做出来了。</h4><p><a href="https://leetcode-cn.com/problems/first-missing-positive/">41. 缺失的第一个正数</a></p><h4 id="5-问java"><a href="#5-问java" class="headerlink" title="5. 问java"></a>5. 问java</h4><ul><li>你说你看过hashmap源码，那如果我要存两个对象，假设是一个STU类，他们内部所有的值都是相同的，但是他们就不是两个相同的对象，这时候map会判定他们到同一个桶内吗？<ul><li>回答：应该…不会吧…他们是根据对象的类的hashcode分配的桶，如果不同的对象hashcode也不同。面试官这时候好像也不是特别确定，不知道是不是我答错了。</li></ul></li><li>接上一个问题，如果我非要存两个STU对象，而且我非要不设置id，那你能怎么办呢？答：<ul><li>重写STU类的hashcode函数。</li></ul></li><li>接上一个问题，除了重写hashcode函数，还需要做什么其他的吗？<ul><li>答：不知道（我看了源码，好像确实只需要重写hashcode）</li></ul></li></ul><h4 id="6-问go"><a href="#6-问go" class="headerlink" title="6. 问go"></a>6. 问go</h4><ul><li>我给你一个结构体和两个管道，你判断一下这两个管道哪个性能更好一点？（有点刁钻，涉及到逃逸分析和go的传参方式）<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    xxxxxxxxx...</span><br><span class="line">&#125; s</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c1 = <span class="built_in">make</span>(<span class="keyword">chan</span> s)</span><br><span class="line"><span class="keyword">var</span> c2 = <span class="built_in">make</span>(<span class="keyword">chan</span> *s)</span><br></pre></td></tr></table></figure></li></ul><h2 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h2><p>2022.3.22</p><h4 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h4><p>介绍完问我上课有学什么吗</p><h4 id="问实习经历"><a href="#问实习经历" class="headerlink" title="问实习经历"></a>问实习经历</h4><p>大概了解了一下实习所做的内容和实习时项目的人员组织。</p><h4 id="问了点小八股"><a href="#问了点小八股" class="headerlink" title="问了点小八股"></a>问了点小八股</h4><ul><li>了解tcp的滑动窗口吗？</li><li>那你顺便就说说拥塞控制吧！</li><li>线程和进程和协程的区别是什么？</li><li>那你顺便说说进程间通信的方式吧？</li><li>你说的进程间通信你都有用过吗？<ul><li>没有，无语了</li></ul></li></ul><h4 id="做个题吧！"><a href="#做个题吧！" class="headerlink" title="做个题吧！"></a>做个题吧！</h4><ul><li><p>请你写一个单例模式，并且运行程序证明你的单例模式确实是单例的。</p><p>我构造函数忘记加private，他问：你单例的构造函数还能给别人调用？</p><p>类的那个属性需要设置为volital，他问：你知道volital具体有什么用吗</p></li><li><p>leetcode原题：<a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></p></li></ul><h4 id="反问"><a href="#反问" class="headerlink" title="反问"></a>反问</h4><ul><li>你觉得你对我有啥建议<ul><li>你才大三，没啥考的，无非就是考考八股考考题，问你分布式难不成你给我说的头头是道？（个人内心总结，非原话）。</li></ul></li></ul><h2 id="hr面"><a href="#hr面" class="headerlink" title="hr面"></a>hr面</h2><p>2022.3.29</p><ul><li>怎么学习的</li><li>学习过程的困难？</li><li>以往实习遇到的困难？怎么解决的？</li><li>上一段面试的leader怎么评价你的实习经历？</li><li>你希望到我们公司能有什么收获呢？</li></ul><p>可能还有一些忘了，但是大体上就是这些。答的时候偏向技术回答了，但是对方似乎想要获得更偏人际交流方面的回答。</p><h2 id="电话口头oc"><a href="#电话口头oc" class="headerlink" title="电话口头oc"></a>电话口头oc</h2><p>2022.4.2 电话口头oc了，截至2022.4.7未收到邮箱oc通知。</p><h2 id="正式oc"><a href="#正式oc" class="headerlink" title="正式oc"></a>正式oc</h2><p>2022.4.7 也就是写此面经的当天通知oc了</p>]]></content>
    
    
    <summary type="html">在行情十分困难时投递的字节飞书后端实习，运气好没有被hc所限制...</summary>
    
    
    
    
    <category term="面经" scheme="http://example.com/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="飞书" scheme="http://example.com/tags/%E9%A3%9E%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo从零开始快速建站</title>
    <link href="http://example.com/2022/04/07/hexo-from-0to1/"/>
    <id>http://example.com/2022/04/07/hexo-from-0to1/</id>
    <published>2022-04-07T02:55:23.000Z</published>
    <updated>2022-04-07T10:40:49.367Z</updated>
    
    <content type="html"><![CDATA[<p>服务器环境：ubuntu 18 LTS<br>开发环境：windows10</p><h3 id="一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）"><a href="#一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）" class="headerlink" title="一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）"></a>一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）</h3><p><strong>安装node环境</strong></p><p>由于apt仓库当中的nodejs版本只有10.8，版本太老连npm都装不上，所以用以下命令更新一下仓库。网上还有文章写到更换清华源加速下载，但是我使用清华源后会仍然安装了旧版，所以还是等了很久去下载了nodesource中的12版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install nodejs</span><br></pre></td></tr></table></figure><p>顺带一提，如果发现装错版本不要慌张，以下三条命令逐条执行即可卸载nodejs：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove nodejs</span><br><span class="line">sudo apt purge nodejs</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><p><strong>安装npm</strong></p><p>这里我发现即使安装12版本的node，仍然安装不上npm，提示版本冲突，一气之下安装了yarn，发现能够正常使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install yarn</span><br></pre></td></tr></table></figure><p><strong>安装git与nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install git</span><br><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><p><strong>安装hexo</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p><strong>验证hexo是否安装完成</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo</span><br></pre></td></tr></table></figure><h3 id="二、开发环境"><a href="#二、开发环境" class="headerlink" title="二、开发环境"></a>二、开发环境</h3><p>这里就是安装windows10的node、npm和hexo了，安装npm之前的步骤因为我本机已安装且步骤简单，此处不赘述。</p><p><strong>安装好npm之后</strong></p><p>安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>初始化hexo<br>本地创建一个用于hexo开发的文件夹，并切换到其中，进行初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>那么接下来就可以发现在文件夹中多了许多的文件，就代表你的hexo已经创建成功了！</p><p>使用以下指令开启服务，就可以在 <a href="http://localhost:4000/">http://localhost:4000</a> 访问到（上为完整指令，下为缩写指令，都能正常运行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo serve</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>新建一篇博文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;新博文的名称&quot;</span></span><br></pre></td></tr></table></figure><p>此时在文件夹<code>source/_post</code>下会有一个同名的<code>.md</code>文件，在其中编辑就可以修改文章。</p><h3 id="三、配置服务器git环境（若部署到github或者gitee上，忽略此步）"><a href="#三、配置服务器git环境（若部署到github或者gitee上，忽略此步）" class="headerlink" title="三、配置服务器git环境（若部署到github或者gitee上，忽略此步）"></a>三、配置服务器git环境（若部署到github或者gitee上，忽略此步）</h3><p>在服务器上创建名称和密码都为<code>git</code>的用户，在不同型号的服务器指令不同，可以搜索引擎查找一下。</p><p><strong>认证开发端</strong><br>切换到git用户 <code>su git</code><br>切换到用户目录 <code>cd ~</code><br>创建.ssh目录：<code>mkdir .ssh &amp;&amp; chmod 700 .ssh</code><br>创建<code>authorized_keys</code>公钥保存文件：<code>touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</code> (按回车然后粘贴即可)</p><p><strong>创建git仓库目录</strong><br><code>repo</code>是你自定的仓库名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/repo</span><br><span class="line"><span class="built_in">cd</span> /var/repo</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><p><strong>配置GIT HOOKS</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>在其中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存并退出，设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /var/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>更改文件夹拥有者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git blog.git</span><br></pre></td></tr></table></figure><p><strong>将git仓库链接到静态文件目录下（&#x2F;var&#x2F;www目录下）</strong></p><p><code>hexo</code>也是自定的仓库名称，可以根据自己喜好修改，不过部署到服务器后链接上也会显示这个文件夹名称，建议不要改得太过逆天。</p><p>创建静态文件目录（文章网页）：<code>mkdir /var/www/hexo</code><br>链接git仓库：<code>chown -R git:git /var/www/hexo</code><br>配置权限：<code>chmod -R 755 /var/www/hexo</code></p><p><strong>更新git用户的登录权限</strong></p><p>不限制git用户权限，有可能会被攻击，用git账户乱搞服务器。</p><p>判断git-shell是否存在：<code>cat /usr/bin/git-shell</code> 不存在就用apt装一下git<br>判断shells文件是否存在：<code>cat /etc/shells</code></p><p>添加git-shell路径：<code>sudo vim /etc/shells</code><br>随后在文件末尾增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/git-shell <span class="comment"># 添加你的git-shell</span></span><br></pre></td></tr></table></figure><p>在git用户下执行chsh，运行改命令后命令行前缀变为<code>Login Shell [/bin/bash]</code>，随后输入git-shell路径<code>/usr/bin/git-shell</code></p><p>修改完成后验证： <code>vim /etc/passwd</code>找到类似<code>git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell</code>，看看git用户是否是以git-shell结尾</p><p><strong>测试服务器git</strong></p><p>完成以上的步骤后，在本地电脑执行<code>git clone git@服务器ip:/var/repo/blog.git</code>，如果提示输入密码或者直接能clone一个空文件夹下来即配置成功。</p><h3 id="四、本地部署到远程"><a href="#四、本地部署到远程" class="headerlink" title="四、本地部署到远程"></a>四、本地部署到远程</h3><p><strong>如果是部署到github</strong>，那么需要首先在github上创建一个public仓库，仓库名称为<code>账号名.github.io</code>。只有这样github才会自动识别为<code>github page</code>，通过<code>账号名.github.io</code>访问到。<br><strong>如果是部署到gitee</strong>，我不知道咋弄，和github差不多吧，要手动设置下page。</p><p>打开本地的hexo文件夹，找到其中的<code>_config.yml</code>文件<br>修改deploy部分配置：<br>(可以同时部署到多仓库，参照以下配置即可)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git@服务器ip:/var/hexo/blog.git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git@github.com:账号名/账号名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>部署，按照顺序依次是：清除缓存、重新生成部署文件、部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>到此就正式部署完成了，但还有一步！</p><p><strong>如果部署到自己服务器</strong>，需要配置开头安装了的nginx，否则通过ip无法访问到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    root /var/www/hexo; # 修改为自己的www下的文件夹</span><br><span class="line">    server_name blog.aqcloud.ltd; # 自己的域名</span><br><span class="line">    location / &#123;</span><br><span class="line">            # First attempt to serve request as file, then</span><br><span class="line">            # as directory, then fall back to displaying a 404.</span><br><span class="line">            try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其余地方无需修改，随后重启nignx即可通过服务器ip访问到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><h4 id="到此已经全部部署完毕，后面是对网页的一些修改添加。"><a href="#到此已经全部部署完毕，后面是对网页的一些修改添加。" class="headerlink" title="到此已经全部部署完毕，后面是对网页的一些修改添加。"></a>到此已经全部部署完毕，后面是对网页的一些修改添加。</h4><h3 id="五、更换主题"><a href="#五、更换主题" class="headerlink" title="五、更换主题"></a>五、更换主题</h3><p><a href="https://hexo.io/themes/">hexo官网主题</a><br><a href="https://easyhexo.com/2-Theme-use-and-config/">非官网主题推荐网站</a></p><p>按照使用说明，将主题clone到<code>themes/</code>文件夹下。<br>如果想要自己修改主题，可以将别人的主题fork下来再clone。</p><p>随后在<code>_config.yml</code>中配置使用主题<br>(apollo是我编写此文时使用的主题)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">apollo</span></span><br></pre></td></tr></table></figure><p>随后重新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>使用<code>hexo d</code>部署，使用<code>hexo s</code>本地运行。</p><h3 id="六、设置评论区"><a href="#六、设置评论区" class="headerlink" title="六、设置评论区"></a>六、设置评论区</h3><p>到github创建一个public库，并且安装<a href="https://github.com/apps/utterances">utterances app</a>到这个库中</p><p>在你想要展示的页面下增加（username是你自己的github用户名，reponame是你刚刚创建的那个public库的库名）： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://utteranc.es/client.js&quot;</span></span><br><span class="line">        repo=<span class="string">&quot;username/reponame&quot;</span></span><br><span class="line">        issue-term=<span class="string">&quot;pathname&quot;</span></span><br><span class="line">        theme=<span class="string">&quot;github-light&quot;</span></span><br><span class="line">        crossorigin=<span class="string">&quot;anonymous&quot;</span></span><br><span class="line">        <span class="keyword">async</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="七、新增页面"><a href="#七、新增页面" class="headerlink" title="七、新增页面"></a>七、新增页面</h3><p>我自己使用了新建tags的页面，参考了<a href="https://www.voidking.com/dev-hexo-categories/">Hexo添加categories页面</a>。<br>大致流程是：</p><ol><li><code>hexo new page tags</code> </li><li>修改主题的config当中的menu </li><li><code>tags/index.md</code>中的头，type和layout都改成<code>tags</code> </li><li>到<code>apollo/layout</code>中新建<code>tags.jade</code>，仿造其他页面的写法写一个，这时能在页面中暗道<code>tags.jade</code>写的内容即成功</li><li>到scss目录写样式，最后记得给<code>apollo.scss</code>compile一下。</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.jianshu.com/p/70bf58c48010">HEXO 部署到云服务器详细指南</a><br><a href="https://cnhuazhu.top/butterfly/2021/01/21/Hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/">Hexo快速搭建一个博客</a><br><a href="https://blog.njilc.com/post/self-hosted-utterances-tutorial">自托管Utterances教程</a></p>]]></content>
    
    
    <summary type="html">简述hexo建站流程，不包括更换主题和修改主题内容...</summary>
    
    
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/04/04/hello-world/"/>
    <id>http://example.com/2022/04/04/hello-world/</id>
    <published>2022-04-04T06:28:04.244Z</published>
    <updated>2022-04-04T06:28:04.244Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
