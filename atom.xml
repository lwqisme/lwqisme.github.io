<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-07T05:08:31.901Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Hexo从零开始快速建站</title>
    <link href="http://example.com/2022/04/07/hexo-from-0to1/"/>
    <id>http://example.com/2022/04/07/hexo-from-0to1/</id>
    <published>2022-04-07T02:55:23.000Z</published>
    <updated>2022-04-07T05:08:31.901Z</updated>
    
    <content type="html"><![CDATA[<p>服务器环境：ubuntu 18 LTS<br>开发环境：windows10</p><h3 id="一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）"><a href="#一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）" class="headerlink" title="一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）"></a>一、服务器安装环境（如果只是部署到github或者gitee上，忽略此步）</h3><p><strong>安装node环境</strong></p><p>由于apt仓库当中的nodejs版本只有10.8，版本太老连npm都装不上，所以用以下命令更新一下仓库。网上还有文章写到更换清华源加速下载，但是我使用清华源后会仍然安装了旧版，所以还是等了很久去下载了nodesource中的12版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install nodejs</span><br></pre></td></tr></table></figure><p>顺带一提，如果发现装错版本不要慌张，以下三条命令逐条执行即可卸载nodejs：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove nodejs</span><br><span class="line">sudo apt purge nodejs</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><p><strong>安装npm</strong></p><p>这里我发现即使安装12版本的node，仍然安装不上npm，提示版本冲突，一气之下安装了yarn，发现能够正常使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install yarn</span><br></pre></td></tr></table></figure><p><strong>安装git与nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install git</span><br><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><p><strong>安装hexo</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p><strong>验证hexo是否安装完成</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo</span><br></pre></td></tr></table></figure><h3 id="二、开发环境"><a href="#二、开发环境" class="headerlink" title="二、开发环境"></a>二、开发环境</h3><p>这里就是安装windows10的node、npm和hexo了，安装npm之前的步骤因为我本机已安装且步骤简单，此处不赘述。</p><p><strong>安装好npm之后</strong></p><p>安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>初始化hexo<br>本地创建一个用于hexo开发的文件夹，并切换到其中，进行初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>那么接下来就可以发现在文件夹中多了许多的文件，就代表你的hexo已经创建成功了！</p><p>使用以下指令开启服务，就可以在 <a href="http://localhost:4000/">http://localhost:4000</a> 访问到（上为完整指令，下为缩写指令，都能正常运行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo serve</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>新建一篇博文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;新博文的名称&quot;</span></span><br></pre></td></tr></table></figure><p>此时在文件夹<code>source/_post</code>下会有一个同名的<code>.md</code>文件，在其中编辑就可以修改文章。</p><h3 id="三、配置服务器git环境（若部署到github或者gitee上，忽略此步）"><a href="#三、配置服务器git环境（若部署到github或者gitee上，忽略此步）" class="headerlink" title="三、配置服务器git环境（若部署到github或者gitee上，忽略此步）"></a>三、配置服务器git环境（若部署到github或者gitee上，忽略此步）</h3><p>在服务器上创建名称和密码都为<code>git</code>的用户，在不同型号的服务器指令不同，可以搜索引擎查找一下。</p><p><strong>认证开发端</strong><br>切换到git用户 <code>su git</code><br>切换到用户目录 <code>cd ~</code><br>创建.ssh目录：<code>mkdir .ssh &amp;&amp; chmod 700 .ssh</code><br>创建<code>authorized_keys</code>公钥保存文件：<code>touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</code> (按回车然后粘贴即可)</p><p><strong>创建git仓库目录</strong><br><code>repo</code>是你自定的仓库名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/repo</span><br><span class="line"><span class="built_in">cd</span> /var/repo</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><p><strong>配置GIT HOOKS</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>在其中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存并退出，设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /var/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>更改文件夹拥有者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git blog.git</span><br></pre></td></tr></table></figure><p><strong>将git仓库链接到静态文件目录下（&#x2F;var&#x2F;www目录下）</strong></p><p><code>hexo</code>也是自定的仓库名称，可以根据自己喜好修改，不过部署到服务器后链接上也会显示这个文件夹名称，建议不要改得太过逆天。</p><p>创建静态文件目录（文章网页）：<code>mkdir /var/www/hexo</code><br>链接git仓库：<code>chown -R git:git /var/www/hexo</code><br>配置权限：<code>chmod -R 755 /var/www/hexo</code></p><p><strong>更新git用户的登录权限</strong></p><p>不限制git用户权限，有可能会被攻击，用git账户乱搞服务器。</p><p>判断git-shell是否存在：<code>cat /usr/bin/git-shell</code> 不存在就用apt装一下git<br>判断shells文件是否存在：<code>cat /etc/shells</code></p><p>添加git-shell路径：<code>sudo vim /etc/shells</code><br>随后在文件末尾增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/git-shell <span class="comment"># 添加你的git-shell</span></span><br></pre></td></tr></table></figure><p>在git用户下执行chsh，运行改命令后命令行前缀变为<code>Login Shell [/bin/bash]</code>，随后输入git-shell路径<code>/usr/bin/git-shell</code></p><p>修改完成后验证： <code>vim /etc/passwd</code>找到类似<code>git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell</code>，看看git用户是否是以git-shell结尾</p><p><strong>测试服务器git</strong></p><p>完成以上的步骤后，在本地电脑执行<code>git clone git@服务器ip:/var/repo/blog.git</code>，如果提示输入密码或者直接能clone一个空文件夹下来即配置成功。</p><h3 id="四、本地部署到远程"><a href="#四、本地部署到远程" class="headerlink" title="四、本地部署到远程"></a>四、本地部署到远程</h3><p><strong>如果是部署到github</strong>，那么需要首先在github上创建一个public仓库，仓库名称为<code>账号名.github.io</code>。只有这样github才会自动识别为<code>github page</code>，通过<code>账号名.github.io</code>访问到。<br><strong>如果是部署到gitee</strong>，我不知道咋弄，和github差不多吧，要手动设置下page。</p><p>打开本地的hexo文件夹，找到其中的<code>_config.yml</code>文件<br>修改deploy部分配置：<br>(可以同时部署到多仓库，参照以下配置即可)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git@服务器ip:/var/hexo/blog.git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git@github.com:账号名/账号名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>部署，按照顺序依次是：清除缓存、重新生成部署文件、部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>到此就正式部署完成了</p><h3 id="五、更换主题"><a href="#五、更换主题" class="headerlink" title="五、更换主题"></a>五、更换主题</h3><p><a href="https://hexo.io/themes/">hexo官网主题</a><br><a href="https://easyhexo.com/2-Theme-use-and-config/">非官网主题推荐网站</a></p><p>按照使用说明，将主题clone到<code>themes/</code>文件夹下。<br>如果想要自己修改主题，可以将别人的主题fork下来再clone。</p><p>随后在<code>_config.yml</code>中配置使用主题<br>(apollo是我编写此文时使用的主题)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">apollo</span></span><br></pre></td></tr></table></figure><p>随后重新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>使用<code>hexo d</code>部署，使用<code>hexo s</code>本地运行。</p>]]></content>
    
    
    <summary type="html">简述hexo建站流程，不包括更换主题和修改主题内容...</summary>
    
    
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/04/04/hello-world/"/>
    <id>http://example.com/2022/04/04/hello-world/</id>
    <published>2022-04-04T06:28:04.244Z</published>
    <updated>2022-04-04T06:28:04.244Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
